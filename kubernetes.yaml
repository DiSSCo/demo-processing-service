apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-processing-service
  labels:
    app: demo-processing-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-processing-service
  template:
    metadata:
      labels:
        app: demo-processing-service
    spec:
      containers:
        - name: demo-processing-service
          image: public.ecr.aws/dissco/demo-processing-service
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            - name: spring.datasource.url
              value:
            - name: spring.datasource.username
              value:
            - name: spring.datasource.password
              value:
            - name: spring.profiles.active
              value:
            - name: kafka.consumer.host
              value:
            - name: kafka.consumer.group
              value:
            - name: kafka.consumer.topic
              value:
            - name: kafka.publisher.host
              value:
            - name: elasticsearch.hostname
              value:
            - name: elasticsearch.port
              value:
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: processing-service-scaled-object
spec:
  scaleTargetRef:
    name: demo-processing-service
  minReplicaCount: 0
  maxReplicaCount:  1
  triggers:
  - type: kafka
    metadata:
      bootstrapServers: kafka.kafka.svc.cluster.local:9092
      consumerGroup: group
      topic: topic-multi
      lagThreshold: '5'
